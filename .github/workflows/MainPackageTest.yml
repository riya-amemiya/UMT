# アクション名
name: Main Package Test

# タイミングを指定
on:
  schedule:
    - cron: '0 20 * * *'
  pull_request:
    branches:
      - main
      - develop
      - feature/*
    paths:
      - 'package/main/**'
  workflow_dispatch:
permissions:
  pull-requests: write
jobs:
    javascriptSetup:
        name: JavaScript Check on Ubuntu
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                bun-version: [latest]
                os: [ubuntu-latest]
        defaults:
          run:
            working-directory: ./package/main
        steps:
            - uses: actions/checkout@v4
            - name: Use Bun ${{ matrix.bun-version }}
              uses: oven-sh/setup-bun@v2
              with:
                  bun-version: ${{ matrix.bun-version }}
            - name: Cache Restore devDependencies
              id: cache-restore-dev-depends
              uses: actions/cache/restore@v4
              with:
                  path: '**/node_modules'
                  key: dev-depends-${{ matrix.os }}-bun${{ matrix.bun-version }}-${{ hashFiles('package/main/package.json') }}
            - name: Install dependencies
              if: steps.cache-restore-dev-depends.outputs.cache-hit != 'true'
              run: bun i
            - name: Cache Save devDependencies
              if: steps.cache-restore-dev-depends.outputs.cache-hit != 'true'
              id: cache-save-dev-depends
              uses: actions/cache/save@v3
              with:
                  path: '**/node_modules'
                  key: dev-depends-${{ matrix.os }}-bun${{ matrix.bun-version }}-${{ hashFiles('package/main/package.json') }}
    javascriptLint:
        name: JavaScript Lint on Ubuntu
        needs: javascriptSetup
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                bun-version: [latest]
                os: [ubuntu-latest]
        defaults:
          run:
            working-directory: ./package/main
        steps:
            - uses: actions/checkout@v4
            - name: Use Bun ${{ matrix.bun-version }}
              uses: oven-sh/setup-bun@v2
              with:
                  bun-version: ${{ matrix.bun-version }}
            - name: Cache Restore devDependencies
              id: cache-restore-dev-depends
              uses: actions/cache/restore@v4
              with:
                  path: '**/node_modules'
                  key: dev-depends-${{ matrix.os }}-bun${{ matrix.bun-version }}-${{ hashFiles('package/main/package.json') }}
            - name: Lint
              run: bun run lint:ci

    javascriptBuild:
          name: JavaScript Build on Ubuntu
          needs: javascriptSetup
          runs-on: ${{ matrix.os }}
          strategy:
              matrix:
                  bun-version: [latest]
                  os: [ubuntu-latest]
          defaults:
            run:
              working-directory: ./package/main
          steps:
            - uses: actions/checkout@v4
            - name: Use Bun ${{ matrix.bun-version }}
              uses: oven-sh/setup-bun@v2
              with:
                  bun-version: ${{ matrix.bun-version }}
            - name: Cache Restore devDependencies
              id: cache-restore-dev-depends
              uses: actions/cache/restore@v4
              with:
                  path: '**/node_modules'
                  key: dev-depends-${{ matrix.os }}-bun${{ matrix.bun-version }}-${{ hashFiles('package/main/package.json') }}
            - uses: actions/cache/restore@v4
              id: cache-restore-prod
              with:
                  enableCrossOsArchive: true
                  path: '**/module'
                  key: ${{ matrix.bun-version }}-${{ hashFiles('package/main/module/tsconfig.tsbuildinfo') }}
            - name: Build
              if: steps.cache-restore-prod.outputs.cache-hit != 'true'
              run: bun run build
            - run: ls module
            - name: Cache Save Build
              if: steps.cache-restore-prod.outputs.cache-hit != 'true'
              uses: actions/cache/save@v3
              with:
                  enableCrossOsArchive: true
                  path: '**/module'
                  key: ${{ matrix.bun-version }}-${{ hashFiles('package/main/module/tsconfig.tsbuildinfo') }}

    javascriptTest:
        name: JavaScript Test on Ubuntu
        needs: javascriptSetup
        runs-on: ${{ matrix.os }}
        strategy:
          matrix:
            bun-version: [latest]
            os: [ubuntu-latest]
        defaults:
          run:
            working-directory: ./package/main
        steps:
            - uses: actions/checkout@v4
            - name: Use Bun ${{ matrix.bun-version }}
              uses: oven-sh/setup-bun@v2
              with:
                bun-version: ${{ matrix.bun-version }}
            - name: Cache Restore productionDependencies
              uses: actions/cache/restore@v4
              with:
                  path: '**/node_modules'
                  key: dev-depends-${{ matrix.os }}-bun${{ matrix.bun-version }}-${{ hashFiles('package/main/package.json') }}
            - name: Run Test
              run: bun run test --coverage
            - name: Upload coverage reports to Codecov
              uses: codecov/codecov-action@v4
              with:
                token: ${{ secrets.CODECOV_TOKEN }}
                slug: riya-amemiya/UMT

