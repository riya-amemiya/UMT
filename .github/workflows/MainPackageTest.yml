# アクション名
name: Main Package Test

# タイミングを指定
on:
    pull_request:
        paths:
            - 'package/main/src/**'
            - '.github/workflows/**'
    workflow_dispatch:

jobs:
    javascriptSetup:
        name: JavaScript Check on Ubuntu
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                node-version: [18.x, 20.x]
                os: [ubuntu-latest]
        defaults:
          run:
            working-directory: ./package/main
        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Cache Restore devDependencies
              id: cache-restore-dev-depends
              uses: actions/cache/restore@v3
              with:
                  path: '**/node_modules'
                  key: dev-depends-${{ matrix.os }}-node${{ matrix.node-version }}-${{ hashFiles('yarn.lock') }}
            - name: Install dependencies
              if: steps.cache-restore-dev-depends.outputs.cache-hit != 'true'
              run: yarn install --frozen-lockfile --check-files
            - name: Run check
              run: yarn lint
            - name: Cache Save devDependencies
              if: steps.cache-restore-dev-depends.outputs.cache-hit != 'true'
              id: cache-save-dev-depends
              uses: actions/cache/save@v3
              with:
                  path: '**/node_modules'
                  key: dev-depends-${{ matrix.os }}-node${{ matrix.node-version }}-${{ hashFiles('yarn.lock') }}
    javascriptBuild:
          name: JavaScript Build on Ubuntu
          needs: javascriptSetup
          runs-on: ${{ matrix.os }}
          strategy:
              matrix:
                  node-version: [18.x, 20.x]
                  os: [ubuntu-latest]
          defaults:
            run:
              working-directory: ./package/main
          steps:
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Cache Restore devDependencies
              id: cache-restore-dev-depends
              uses: actions/cache/restore@v3
              with:
                  path: '**/node_modules'
                  key: dev-depends-${{ matrix.os }}-node${{ matrix.node-version }}-${{ hashFiles('yarn.lock') }}
            - uses: actions/cache/restore@v3
              id: cache-restore-prod
              with:
                  enableCrossOsArchive: true
                  path: 'module/**/*'
                  key: ${{ matrix.node-version }}-${{ github.sha }}
            - name: Build
              if: steps.cache-restore-prod.outputs.cache-hit != 'true'
              run: yarn build
            - run: ls module
            - name: Cache Save Build
              if: steps.cache-restore-prod.outputs.cache-hit != 'true'
              uses: actions/cache/save@v3
              with:
                  enableCrossOsArchive: true
                  path: 'module/**/*'
                  key: ${{ matrix.node-version }}-${{ github.sha }}

    javascriptTest:
        name: JavaScript Test on Ubuntu
        needs: javascriptBuild
        runs-on: ${{ matrix.os }}
        strategy:
          matrix:
            node-version: [18.x, 20.x]
            shard: [1/4, 2/4, 3/4, 4/4]
            os: [ubuntu-latest]
        defaults:
          run:
            working-directory: ./package/main
        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                node-version: ${{ matrix.node-version }}
            - name: Cache Restore productionDependencies
              uses: actions/cache/restore@v3
              with:
                  path: '**/node_modules'
                  key: dev-depends-${{ matrix.os }}-node${{ matrix.node-version }}-${{ hashFiles('yarn.lock') }}
            - uses: actions/cache/restore@v3
              id: cache-restore-prod
              with:
                  enableCrossOsArchive: true
                  path: 'module/**/*'
                  key: ${{ matrix.node-version }}-${{ github.sha }}
            - name: Build
              if: steps.cache-restore-prod.outputs.cache-hit != 'true'
              run: yarn build
            - name: Run Test ${{ matrix.shard }}
              run: yarn test --shard ${{ matrix.shard }}
            - name: Cache Save Build
              if: steps.cache-restore-prod.outputs.cache-hit != 'true'
              uses: actions/cache/save@v3
              with:
                  enableCrossOsArchive: true
                  path: 'module/**/*'
                  key: ${{ matrix.node-version }}-${{ github.sha }}